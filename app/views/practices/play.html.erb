<div id="countdown"></div>
<div id='slideshow_practice_techniques' style='width: auto;'>
  <% @practice.practice_techniques.each do |practice_technique| %>
    <%= render :partial => 'play_practice_technique', :locals => {:practice_technique => practice_technique} %>
    <% if practice_technique.compensate? %>
      <%= render :partial => 'play_practice_technique', :locals => {:practice_technique => practice_technique, :compensation => true} %>
    <% end %>
  <% end %>
</div>


<%= javascript_tag do %>
  $('#slideshow_practice_techniques').cycle({
    delay: (parseInt($('#slideshow_practice_techniques .slideshow_practice_technique').first().attr('minutes'))*60 + parseInt($('#slideshow_practice_techniques .slideshow_practice_technique').first().attr('seconds')))*1000 - 2000,
    timeoutFn: function(current, next, options, fwd) {
      minutes = parseInt($(next).attr('minutes')) || 0
      seconds = parseInt($(next).attr('seconds')) || 1
      duration = minutes*60 + seconds;
      return duration*1000 + <%= @practice.delay*1000 %>; // add an extra second to account for transition
    },
    fx: 'all',
    speed: <%= @practice.delay*1000 %>,
    after: function(currSlideElement, nextSlideElement, options, forwardFlag) {
      minutes = parseInt($(nextSlideElement).attr('minutes')) || 0
      seconds = parseInt($(nextSlideElement).attr('seconds')) || 1;
      $('#countdown').counter({min:minutes, sec:seconds, onFinish: function() {$.sound.play('/ping.wav');}});
    },
    fit: 1,
    width: '99.9%'
  });
<% end %>